{"version":3,"sources":["Login.js","SaveUser.js","App.js","index.js"],"names":["Login","content","onChange","onFinish","value","a","axios","post","username","password","then","window","location","replace","name","className","initialValues","remember","Item","rules","required","message","prefix","UserOutlined","placeholder","LockOutlined","type","wrapperCol","offset","span","htmlType","style","align","onClick","SaveUser","Option","Select","formItemLayout","labelCol","xs","sm","tailFormItemLayout","RegistrationForm","Form","useForm","form","values","put","scrollToFirstError","label","tooltip","whitespace","hasFeedback","Password","dependencies","getFieldValue","validator","_","Promise","reject","Error","resolve","width","valuePropName","href","App","useState","setContent","margin","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2cd69dc.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport './Login.css'\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nexport default function Login(content, onChange){\r\n    if(content === \"login\"){\r\n            const onFinish = async (value) => {\r\n                await axios.post('http://localhost:8081/login?username=' + value.username + '&password=' + value.password).then(()=>{window.location.replace(\"http://localhost:8081/\");});\r\n\r\n            };\r\n\r\n            return (\r\n                <Form\r\n                    name=\"normal_login\"\r\n                    className=\"login-form\"\r\n                    initialValues={{\r\n                        remember: true,\r\n                    }}\r\n                    onFinish={onFinish}\r\n                >\r\n                    <Form.Item\r\n                        name=\"username\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your Username!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"password\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your Password!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input\r\n                            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                            Войти\r\n                        </Button>\r\n                        <br/>\r\n                        <br/>\r\n                        <Button style={{align: 'center'}} type=\"primary\" onClick={onChange}>Загестрироваться</Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            );\r\n        };\r\n\r\n}\r\n\r\n","import React from 'react';\r\nimport {\r\n    Form,\r\n    Input,\r\n    Select,\r\n    Checkbox,\r\n    Button,\r\n} from 'antd';\r\nimport axios from \"axios\";\r\n\r\nexport default function SaveUser(content, onChange) {\r\n    if(content === \"register\") {\r\n        const { Option } = Select;\r\n\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: {\r\n                    span: 24,\r\n                },\r\n                sm: {\r\n                    span: 8,\r\n                },\r\n            },\r\n            wrapperCol: {\r\n                xs: {\r\n                    span: 24,\r\n                },\r\n                sm: {\r\n                    span: 16,\r\n                },\r\n            },\r\n        };\r\n\r\n        const tailFormItemLayout = {\r\n            wrapperCol: {\r\n                xs: {\r\n                    span: 24,\r\n                    offset: 0,\r\n                },\r\n                sm: {\r\n                    span: 16,\r\n                    offset: 8,\r\n                },\r\n            },\r\n        };\r\n\r\n        const RegistrationForm = () => {\r\n            const [form] = Form.useForm();\r\n\r\n            const onFinish  = async (values) => {\r\n                axios.put('http://localhost:8081/users/save', values)\r\n                    .then(() =>{onChange();\r\n                    })\r\n            };\r\n\r\n            return (\r\n                <Form\r\n                    {...formItemLayout}\r\n                    form={form}\r\n                    name=\"register\"\r\n                    onFinish={onFinish}\r\n                    scrollToFirstError\r\n                >\r\n                    <Form.Item\r\n                        name=\"username\"\r\n                        label=\"Логин\"\r\n                        tooltip=\"What do you want others to call you?\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your nickname!',\r\n                                whitespace: true,\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"accountType\"\r\n                        label=\"Тип аккаунта\"\r\n                        hasFeedback\r\n                        rules={[{ required: true, message: 'Please select your country!' }]}\r\n                    >\r\n                        <Select placeholder=\"Выберите тип аккаунта\">\r\n                            <Option value=\"USER\">User</Option>\r\n                            <Option value=\"SHOP\">Partner</Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"email\"\r\n                        label=\"Почта\"\r\n                        rules={[\r\n                            {\r\n                                type: 'email',\r\n                                message: 'The input is not valid E-mail!',\r\n                            },\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your E-mail!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"password\"\r\n                        label=\"Пароль\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your password!',\r\n                            },\r\n                        ]}\r\n                        hasFeedback\r\n                    >\r\n                        <Input.Password />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"confirm\"\r\n                        label=\"Подтвердите пароль\"\r\n                        dependencies={['password']}\r\n                        hasFeedback\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please confirm your password!',\r\n                            },\r\n                            ({ getFieldValue }) => ({\r\n                                validator(_, value) {\r\n                                    if (!value || getFieldValue('password') === value) {\r\n                                        return Promise.resolve();\r\n                                    }\r\n\r\n                                    return Promise.reject(new Error('The two passwords that you entered do not match!'));\r\n                                },\r\n                            }),\r\n                        ]}\r\n                    >\r\n                        <Input.Password />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"phoneNumber\"\r\n                        label=\"Номер телефона\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your phone number!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input\r\n                            style={{\r\n                                width: '100%',\r\n                            }}\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"fcs\"\r\n                        label=\"ФИО\"\r\n                        tooltip=\"What do you want others to call you?\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your nickname!',\r\n                                whitespace: true,\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"city\"\r\n                        label=\"Город\"\r\n                        tooltip=\"What do you want others to call you?\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your nickname!',\r\n                                whitespace: true,\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input/>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"address\"\r\n                        label=\"Адрес\"\r\n                        tooltip=\"What do you want others to call you?\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your nickname!',\r\n                                whitespace: true,\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        valuePropName=\"checked\"\r\n                        rules={[\r\n                            {\r\n                                validator: (_, value) =>\r\n                                    value ? Promise.resolve() : Promise.reject(new Error('Should accept agreement')),\r\n                            },\r\n                        ]}\r\n                        {...tailFormItemLayout}\r\n                    >\r\n                        <Checkbox>\r\n                            I have read the <a href=\"\">agreement</a>\r\n                        </Checkbox>\r\n                    </Form.Item>\r\n                    <Form.Item {...tailFormItemLayout}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            Register\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            );\r\n        };\r\n        return (<RegistrationForm />);\r\n    }\r\n}","\nimport 'antd/dist/antd.css';\nimport {useState} from \"react\";\nimport Login from \"./Login\";\nimport SaveUser from \"./SaveUser\";\n\nexport default function App() {\n  const [content, setContent] = useState(\"login\");\n\n  const onChange=()=>{\n    setContent(\"register\")\n  }\n\n\n  return(\n      <div style={{width: 600, margin: 'auto'}}>\n        {Login(content,onChange)}\n        {SaveUser(content, onChange)}\n      </div>\n  )\n}\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}